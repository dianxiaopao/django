# -*- coding: utf-8 -*-"""Django settings for Django_api project.Generated by 'django-admin startproject' using Django 1.11.4.For more information on this file, seehttps://docs.djangoproject.com/en/1.11/topics/settings/For the full list of settings and their values, seehttps://docs.djangoproject.com/en/1.11/ref/settings/"""import os# Build paths inside the project like this: os.path.join(BASE_DIR, ...)BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))# Quick-start development settings - unsuitable for production# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/# SECURITY WARNING: keep the secret key used in production secret!SECRET_KEY = 'k=_o^t6_f5_lt15as&6=5wd3=1ls&8%s*g!wm1+6!-^a$!4m6n'# SECURITY WARNING: don't run with debug turned on in production!DEBUG = TrueALLOWED_HOSTS = ['*']# 重装自定义User表为系统用户表#AUTH_USER_MODEL = 'users.User'# 授权相关REST_FRAMEWORK = {    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',    'PAGE_SIZE': 10,    'DEFAULT_PERMISSION_CLASSES': (        'rest_framework.permissions.IsAuthenticated',    ),    'DEFAULT_AUTHENTICATION_CLASSES': (        'rest_framework_jwt.authentication.JSONWebTokenAuthentication',        'rest_framework.authentication.SessionAuthentication',        'rest_framework.authentication.BasicAuthentication',    ),    #自定义异常处理    'EXCEPTION_HANDLER': (        'dataAPI.api_exception.custom_exception_handler'    )#去掉api测试页面    # 'DEFAULT_RENDERER_CLASSES': (    #     'rest_framework.renderers.JSONRenderer',    # ),# 使用Django的标准`django.contrib.auth`权限管理类,    # 或者为尚未认证的用户，赋予只读权限.  不能看到修改栏目    # 'DEFAULT_PERMISSION_CLASSES': [    #     'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'    # ]}INSTALLED_APPS = [    'django.contrib.admin',    'django.contrib.auth',    'django.contrib.contenttypes',    'django.contrib.sessions',    'django.contrib.messages',    'django.contrib.staticfiles',    'rest_framework',    'rest_framework.authtoken',  # 设置token    # 自己创建的app django1.9之后均为以下格式    'student.apps.StudentConfig',    'users.apps.UsersConfig',    'sclass.apps.SclassConfig']MIDDLEWARE = [    'django.middleware.security.SecurityMiddleware',    'django.contrib.sessions.middleware.SessionMiddleware',    'django.middleware.common.CommonMiddleware',    'django.middleware.csrf.CsrfViewMiddleware',    'django.contrib.auth.middleware.AuthenticationMiddleware',    'django.contrib.messages.middleware.MessageMiddleware',    'django.middleware.clickjacking.XFrameOptionsMiddleware',    # 设置跨域（使用corsheaders必须添加的中间件）    'corsheaders.middleware.CorsMiddleware',    'django.middleware.common.CommonMiddleware',]ROOT_URLCONF = 'Django_api.urls'# templates配置此路径后，在对应路径创建文件夹，可把HTML文件放入此路径中。服务器才能识别（故 html文件应该存放在templates文件下）TEMPLATES = [    {        'BACKEND': 'django.template.backends.django.DjangoTemplates',        'DIRS': [],        'DIRS': [os.path.join(BASE_DIR, "templates")],        'APP_DIRS': True,        'OPTIONS': {            'context_processors': [                'django.template.context_processors.debug',                'django.template.context_processors.request',                'django.contrib.auth.context_processors.auth',                'django.contrib.messages.context_processors.messages',            ],        },    },]WSGI_APPLICATION = 'Django_api.wsgi.application'# Database# https://docs.djangoproject.com/en/1.11/ref/settings/#databases#数据库我改为mysql数据库。注意key为大写且固定字段不可随意编写DATABASES = {    'default': {        'ENGINE': 'django.db.backends.mysql',        'NAME': "testDjango",        'USER': 'root',        'PASSWORD': 'root',        'HOST': '192.168.32.1',    }}#去除跨院限制# CORS_ORIGIN_ALLOW_ALL = True# 设置允许跨域的域（corsheaders的配置项）CORS_ORIGIN_WHITELIST = (    '127.0.0.1:80',    'localhost:8080',    '127.0.0.1',)# Password validation# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validatorsAUTH_PASSWORD_VALIDATORS = [    {        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',    },    {        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',    },    {        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',    },    {        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',    },]# Internationalization# https://docs.djangoproject.com/en/1.11/topics/i18n/LANGUAGE_CODE = 'en-us'TIME_ZONE = 'UTC'USE_I18N = TrueUSE_L10N = TrueUSE_TZ = True# Static files (CSS, JavaScript, Images)# https://docs.djangoproject.com/en/1.11/howto/static-files/STATIC_URL = '/static/'